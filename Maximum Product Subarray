Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
--------------------------------------------------------------------------------------------------------
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        if not nums:
            return
        maxend, minend = nums[0], nums[0]
        maxresult = nums[0]
        for i in range(1, len(nums)):
            end1 = maxend*nums[i]
            end2 = minend*nums[i]
            maxend = max(max(end1, end2), nums[i])
            minend = min(min(end1, end2), nums[i])
            maxresult = max(maxresult, maxend)
        return maxresult
